# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Black_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = Latinx_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Latinx Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Latinx Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Latinx_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = Multi_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Multiracial Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Multiracial Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Multi_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = NatAm_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Native American Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Native American Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_NatAm_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="White Proportion",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_White_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop,
text = paste(
"Block Face: ", location_id,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total_count)),
shape = 20,
size = 4,
alpha = 0.85)+
scale_color_continuous(name="Percentage of White People Staying",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
p <- ggplotly(, tooltip = "text")
saveWidget(p, here("docs", "2018_Race_interactive.html"), selfcontained = FALSE, libdir = "libs")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(sf)
library(here)
library(scales) # to edit decimal places shown in legend
library(plotly)
library(htmlwidgets)
SPL_1823 <- read.csv(here("data","SPL_1823.csv"))
SPL_1823_geo <- st_read(here("data", "SPL_1823_location.geojson")) # location_id shapefiles and lat/long coordinates
SEA_map <- st_read(here("data/raw","04_SPL_Seattle_Map.geojson")) # base SEA neighborhood map
SPL_1823 <- SPL_1823 %>%
mutate(
race=recode(staying_race_ethnicity,
"A" = "URM", # Asian
"B" = "URM", # Black or African American
"L" = "URM", # Latino/a or Hispanic
"M" = "URM", # Multiple, assumed to be multiracial
"N" = "URM", # Native American or Alaskan Native
"P" = "URM", # Pacific Island or Native Hawaiian, no observations in dataset
"U" = "Unsure", # Unsure
"W" = "White")) # White
table(SPL_1823$race)
table(SPL_1823$staying_race_ethnicity)
# Realized there were many blanks, so wanted to see where these were coming from
table(SPL_1823$staying_race_ethnicity[SPL_1823$study_id == "2023_Seattle_Citywide"])
# Confirmed that 2023 did not collect race data, so only have race data for 2018
SPL_18 <- SPL_1823 %>%
filter(SPL_1823$study_id == "2018_Seattle_Citywide")
# Run tables again
table(SPL_18$race)
table(SPL_18$staying_race_ethnicity)
# Only 142 blanks now, which seems more normal
race_prop_locid <- SPL_18 %>%
group_by(location_id, staying_race_ethnicity) %>%
dplyr::summarise(count = n()) %>%
pivot_wider(id_cols = location_id,
names_from = staying_race_ethnicity,
values_from = count,
names_prefix = "Observed_") %>%
replace(is.na(.), 0) %>%
rowwise() %>%
mutate(total_count = sum(c_across(starts_with("Observed_")))) %>%
ungroup() %>%
mutate(Asian_prop  = round(Observed_A/total_count, 2),
Black_prop  = round(Observed_B/total_count, 2),
Latinx_prop = round(Observed_L/total_count, 2),
Multi_prop  = round(Observed_M/total_count, 2),
NatAm_prop  = round(Observed_N/total_count, 2),
White_prop  = round(Observed_W/total_count, 2)) %>%
select(location_id, Asian_prop, Black_prop, Latinx_prop, Multi_prop, NatAm_prop, White_prop, total_count) # Adding the total count for the interactive plots
race_prop_locid
race_prop_locid <- SPL_18 %>%
group_by(location_id, staying_race_ethnicity) %>%
dplyr::summarise(count = n()) %>%
pivot_wider(id_cols = location_id,
names_from = staying_race_ethnicity,
values_from = count,
names_prefix = "Observed_") %>%
replace(is.na(.), 0) %>%
rowwise() %>%
mutate(total_count = sum(c_across(starts_with("Observed_")))) %>%
ungroup() %>%
mutate(Asian_prop  = round(Observed_A/total_count, 2),
Black_prop  = round(Observed_B/total_count, 2),
Latinx_prop = round(Observed_L/total_count, 2),
Multi_prop  = round(Observed_M/total_count, 2),
NatAm_prop  = round(Observed_N/total_count, 2),
White_prop  = round(Observed_W/total_count, 2)) %>%
select(location_id, Asian_prop, Black_prop, Latinx_prop, Multi_prop, NatAm_prop, White_prop, total_count) # Adding the total count for the interactive plots
# Add S_HOOD back
race_prop_locid <- SPL_1823 %>%
select(location_id, S_HOOD) %>%
distinct() %>%
right_join(race_prop_locid, by = "location_id")
rm(list=ls())
library(tidyverse)
library(sf)
library(here)
library(scales) # to edit decimal places shown in legend
library(plotly)
library(htmlwidgets)
SPL_1823 <- read.csv(here("data","SPL_1823.csv"))
SPL_1823_geo <- st_read(here("data", "SPL_1823_location.geojson")) # location_id shapefiles and lat/long coordinates
SEA_map <- st_read(here("data/raw","04_SPL_Seattle_Map.geojson")) # base SEA neighborhood map
SPL_1823 <- SPL_1823 %>%
mutate(
race=recode(staying_race_ethnicity,
"A" = "URM", # Asian
"B" = "URM", # Black or African American
"L" = "URM", # Latino/a or Hispanic
"M" = "URM", # Multiple, assumed to be multiracial
"N" = "URM", # Native American or Alaskan Native
"P" = "URM", # Pacific Island or Native Hawaiian, no observations in dataset
"U" = "Unsure", # Unsure
"W" = "White")) # White
table(SPL_1823$race)
table(SPL_1823$staying_race_ethnicity)
# Realized there were many blanks, so wanted to see where these were coming from
table(SPL_1823$staying_race_ethnicity[SPL_1823$study_id == "2023_Seattle_Citywide"])
# Confirmed that 2023 did not collect race data, so only have race data for 2018
SPL_18 <- SPL_1823 %>%
filter(SPL_1823$study_id == "2018_Seattle_Citywide")
# Run tables again
table(SPL_18$race)
table(SPL_18$staying_race_ethnicity)
# Only 142 blanks now, which seems more normal
race_prop_locid <- SPL_18 %>%
group_by(location_id, staying_race_ethnicity) %>%
dplyr::summarise(count = n()) %>%
pivot_wider(id_cols = location_id,
names_from = staying_race_ethnicity,
values_from = count,
names_prefix = "Observed_") %>%
replace(is.na(.), 0) %>%
rowwise() %>%
mutate(total_count = sum(c_across(starts_with("Observed_")))) %>%
ungroup() %>%
mutate(Asian_prop  = round(Observed_A/total_count, 2),
Black_prop  = round(Observed_B/total_count, 2),
Latinx_prop = round(Observed_L/total_count, 2),
Multi_prop  = round(Observed_M/total_count, 2),
NatAm_prop  = round(Observed_N/total_count, 2),
White_prop  = round(Observed_W/total_count, 2)) %>%
select(location_id, Asian_prop, Black_prop, Latinx_prop, Multi_prop, NatAm_prop, White_prop, total_count) # Adding the total count for the interactive plots
# Add S_HOOD back
race_prop_locid <- SPL_1823 %>%
select(location_id, S_HOOD) %>%
distinct() %>%
right_join(race_prop_locid, by = "location_id")
race_prop_18_locid_geo <- left_join(race_prop_locid, SPL_1823_geo, by = "location_id")
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = Asian_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Asian Proportion",
low = "lightblue",
high = "darkblue",
limits = c(0,0.61),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Asian Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Asian_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = Black_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Black Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Black Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Black_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = Latinx_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Latinx Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Latinx Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Latinx_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = Multi_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Multiracial Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Multiracial Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Multi_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = NatAm_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Native American Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Native American Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_NatAm_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="White Proportion",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_White_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop,
text = paste(
"Block Face: ", location_id,
"Neiborhood: ", S_HOOD,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total_count)),
shape = 20,
size = 4,
alpha = 0.85)+
scale_color_continuous(name="White/Total",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
p <- ggplotly(, tooltip = "text")
saveWidget(p, here("docs", "2018_Race_interactive.html"), selfcontained = FALSE, libdir = "libs")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(sf)
library(here)
library(scales) # to edit decimal places shown in legend
library(plotly)
library(htmlwidgets)
SPL_1823 <- read.csv(here("data","SPL_1823.csv"))
SPL_1823_geo <- st_read(here("data", "SPL_1823_location.geojson")) # location_id shapefiles and lat/long coordinates
SEA_map <- st_read(here("data/raw","04_SPL_Seattle_Map.geojson")) # base SEA neighborhood map
SPL_1823 <- SPL_1823 %>%
mutate(
race=recode(staying_race_ethnicity,
"A" = "URM", # Asian
"B" = "URM", # Black or African American
"L" = "URM", # Latino/a or Hispanic
"M" = "URM", # Multiple, assumed to be multiracial
"N" = "URM", # Native American or Alaskan Native
"P" = "URM", # Pacific Island or Native Hawaiian, no observations in dataset
"U" = "Unsure", # Unsure
"W" = "White")) # White
table(SPL_1823$race)
table(SPL_1823$staying_race_ethnicity)
# Realized there were many blanks, so wanted to see where these were coming from
table(SPL_1823$staying_race_ethnicity[SPL_1823$study_id == "2023_Seattle_Citywide"])
# Confirmed that 2023 did not collect race data, so only have race data for 2018
SPL_18 <- SPL_1823 %>%
filter(SPL_1823$study_id == "2018_Seattle_Citywide")
# Run tables again
table(SPL_18$race)
table(SPL_18$staying_race_ethnicity)
# Only 142 blanks now, which seems more normal
race_prop_locid <- SPL_18 %>%
group_by(location_id, staying_race_ethnicity) %>%
dplyr::summarise(count = n()) %>%
pivot_wider(id_cols = location_id,
names_from = staying_race_ethnicity,
values_from = count,
names_prefix = "Observed_") %>%
replace(is.na(.), 0) %>%
rowwise() %>%
mutate(total_count = sum(c_across(starts_with("Observed_")))) %>%
ungroup() %>%
mutate(Asian_prop  = round(Observed_A/total_count, 2),
Black_prop  = round(Observed_B/total_count, 2),
Latinx_prop = round(Observed_L/total_count, 2),
Multi_prop  = round(Observed_M/total_count, 2),
NatAm_prop  = round(Observed_N/total_count, 2),
White_prop  = round(Observed_W/total_count, 2)) %>%
select(location_id, Asian_prop, Black_prop, Latinx_prop, Multi_prop, NatAm_prop, White_prop, total_count) # Adding the total count for the interactive plots
# Add S_HOOD back
race_prop_locid <- SPL_1823 %>%
select(location_id, S_HOOD) %>%
distinct() %>%
right_join(race_prop_locid, by = "location_id")
race_prop_18_locid_geo <- left_join(race_prop_locid, SPL_1823_geo, by = "location_id")
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = Asian_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Asian Proportion",
low = "lightblue",
high = "darkblue",
limits = c(0,0.61),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Asian Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Asian_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = Black_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Black Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Black Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Black_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = Latinx_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Latinx Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Latinx Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Latinx_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = Multi_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Multiracial Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Multiracial Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_Multi_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = NatAm_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="Native American Proportion",
low = "lightblue",
high = "darkblue",
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Native American Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_NatAm_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="White Proportion",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
# Save Map_2018_dot in the Visualization folder ----
ggsave(filename = "2018_raceRatio_White_map_dot.png", path = here("Visualization"), bg="white", width = 7, height = 7)
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop,
text = paste(
"Block Face: ", location_id,
"<br>Neighborhood: ", S_HOOD,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total_count)),
shape = 20,
size = 4,
alpha = 0.85)+
scale_color_continuous(name="White/Total",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
p <- ggplotly(, tooltip = "text")
saveWidget(p, here("docs", "2018_Race_interactive.html"), selfcontained = FALSE, libdir = "libs")
